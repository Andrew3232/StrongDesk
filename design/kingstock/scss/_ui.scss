//====================================================================================================

._ibg {
	position: relative;
	display: flex;
	align-items: center;
	justify-content: center;
 }
 ._ibg img,._ibg picture,._ibg svg {
	position: absolute;
	width: 100%;
	height: 100%;
	top: 0;
	left: 0;
	object-fit: cover;
	object-position: center;

 }
 ._ibg .lazy:not(.loaded) {
	position: absolute;
	min-width: 40px;
	min-height: 40px;
	max-width: 100px;
	max-height: 100px;

	top: 50%;
	left: 50%;
	transform: translate(-50%,-50%);
	object-fit: contain;
	object-position: center;
 }

 ._ibg--contain img,._ibg--contain picture,._ibg--contain svg {
	object-fit: contain;
}

.color_red {
	color: $redColor;
}
.lazy.loading{
	width: 50px;
	height: 50px;
}


.button {
	display: inline-flex;
	font-size: 12px;
	justify-content: center;
	align-items: center;
	font-weight: 600;
	padding: 2px 15px;
	min-height: 32px;
	border-radius: 30px;
	-moz-transform: perspective(1px) translateZ(0px);
	-webkit-transform: perspective(1px) translateZ(0px);
	-o-transform: perspective(1px) translateZ(0px);
	-ms-transform: perspective(1px) translateZ(0px);
	transform: perspective(1px) translateZ(0px);
	-webkit-transition-duration: 0.3s;
	transition-duration: 0.3s;
	-webkit-transition-property: color;
	transition-property: color;
	vertical-align: middle;
	border: 2px solid #cfcfcf;
	text-transform: uppercase;
	transition: background-color 0.2s ease-out 0s, border 0.2s ease-out 0s, color 0.1s ease-out 0s;
	background-color: transparent;
	gap: 5px;
	color: #000;
	&::before{
		content:'';
		position: absolute;
		z-index: -1;
		width: 100%;
		height: 100%;
		background-color: #ff3030;
		border-radius: 25px;
		transform: scaleY(0);
		transition: all 0.35s ease-out 0s;
	}

	@media (min-width:$md2+px){
			&:hover{
				color: #fff;
				border: 2px solid #ff3030;
				&::before{
					transform: scaleY(-1);
				}

				color: #fff;
				// background-color: #ff3030;
				svg {
					fill: #fff;
				}
			}
	}
	&--red {
		background-color: #ff3030;
		border: 1px solid #ff3030;
		color: #fff;
		svg {
			fill: #fff;
		}
		@media (any-hover: hover){
			&:hover{
				color: #000 !important;
				border: 1px solid #ff3030;
				svg {
					fill: #000;
				}
			}
		}	  
		&::before{
			background-color: #fff;
		}
	}
	
}
.button:active {
	transform: scale(0.98);
}

.fancybox-button svg {
	transition: all 0.3s cubic-bezier(0.175, 0.885, 0.32, 1.275) 0s;
}

.fancybox-button:hover svg{
	transform: rotate(-180deg);
}

.main.add_padding {
	padding-top: 100px !important;
}

.title_main {
	font-size: 55px;
	font-weight: 700;
	margin: 0px 0px 10px 0px;
}

.products_block {
	// .products_block__titles
	&__titles {}
}
.titles_section {
	font-weight: 500;
	text-align: center;
	margin: 0px 0px 35px 0px;
	// .titles_section__subtitle
	&__subtitle {
		color: $redColor;
		margin: 0px 0px 8px 0px;
		font-size: 15px;
		display: none;
	}
	// .titles_section__title
	&__title {
		color: #323232;
		font-size: 36px;
		line-height: 1.2;
}
}
.title_lg {
}


.breadcrumbs {
	position: relative;
	overflow-x: auto;
	flex-wrap: nowrap;
	padding: 10px 0;
}

.breadcrumbs .breadcrumbs__item {
	font-size: 12px;
	white-space: nowrap;
}

.breadcrumbs .breadcrumbs__item + .breadcrumbs__item:before {
	content: "";
	background-image: url("data:image/svg+xml,%3Csvg width='24px' height='24px' viewBox='0 0 24 24' fill='none' xmlns='http://www.w3.org/2000/svg'%3E%3Cpath fill-rule='evenodd' clip-rule='evenodd' d='M9.46967 5.46967C9.76256 5.17678 10.2374 5.17678 10.5303 5.46967L16.5303 11.4697C16.8232 11.7626 16.8232 12.2374 16.5303 12.5303L10.5303 18.5303C10.2374 18.8232 9.76256 18.8232 9.46967 18.5303C9.17678 18.2374 9.17678 17.7626 9.46967 17.4697L14.9393 12L9.46967 6.53033C9.17678 6.23744 9.17678 5.76256 9.46967 5.46967Z' fill='%23030D45'/%3E%3C/svg%3E%0A");
	background-repeat: no-repeat no-repeat;
	background-position: center center;
	background-size: cover;
	 width: 15px;
	 height: 15px;	
	font-size: 15px;
}
.breadcrumbs .breadcrumbs__item:first-child {
	margin: 0;
}

.breadcrumbs .breadcrumbs__item:last-child {
	color: $redColor;
}
.breadcrumbs .breadcrumbs__item:last-child:before {
	color: #000;
}

body.lock {
	overflow-x: hidden;
}

body.inner_bg {
	background: #f5f7fc;
}

@media (any-hover: hover){
	
	body.fancybox-active {
		overflow: hidden;
		padding-right: 0.75em;
	}
	body.fancybox-active .header__wrapper {
		padding-right: 0.75em;
	}
}


* {
	scrollbar-width: thin;
	scrollbar-color: #ff3030 #ccc;
 }

body::-webkit-scrollbar {
	width: 0.75em;
 }
  
 body::-webkit-scrollbar-track {
	background: rgba(0,0,0,0.07)
 }
  
 body::-webkit-scrollbar-thumb {
	background: #ff3030;
	border-radius: 100px;
 }
 

 body	{
	&::before{
		content:'';
		position: absolute;width: 100%;height: 100%;top: 0;left: 0;
		background-color: rgba(0,0,0,0.7);
		z-index: 121;
		transition: all 0.5s ease 0s;
		pointer-events: none;
		opacity: 0;
	}
 }

 body.overlay,body.overlay_popup {
	 position: relative;
	 overflow: hidden;
	 &::before{
		opacity: 1;		 
		pointer-events: auto;
	 }

 }

 .form__input.error {
	-webkit-animation: kf_shake 0.4s 1 linear;
	-moz-animation: kf_shake 0.4s 1 linear;
	-o-animation: kf_shake 0.4s 1 linear;
 }

 .password_remind,.change_pass {
	color: #ff3030;
	font-size: 15px;
	opacity: 1;
	margin: 0;
	padding-top: 10px;
	padding-bottom: 10px;
	&:hover {
		text-decoration: underline;
	}
	span {
		padding-right: 0;
	}
}


@keyframes fadeInDown {
   0% {
      opacity: 0;
      transform: translateY(-20px);
   }
   100% {
      opacity: 1;
      transform: translateY(0);
   }
} 

@keyframes animationFramesOne {
	0% {
		transform: translate(0px, 0px) rotate(0deg);
	}
	20% {
		transform: translate(73px, -1px) rotate(36deg);
	}
	40% {
		transform: translate(141px, 72px) rotate(72deg);
	}
	60% {
		transform: translate(83px, 122px) rotate(108deg);
	}
	80% {
		transform: translate(-40px, 72px) rotate(144deg);
	}
	100% {
		transform: translate(0px, 0px) rotate(0deg);
	}
}

@-webkit-keyframes animationFramesOne {
	0% {
		-webkit-transform: translate(0px, 0px) rotate(0deg);
	}
	20% {
		-webkit-transform: translate(73px, -1px) rotate(36deg);
	}
	40% {
		-webkit-transform: translate(141px, 72px) rotate(72deg);
	}
	60% {
		-webkit-transform: translate(83px, 122px) rotate(108deg);
	}
	80% {
		-webkit-transform: translate(-40px, 72px) rotate(144deg);
	}
	100% {
		-webkit-transform: translate(0px, 0px) rotate(0deg);
	}
}

@keyframes fadeInLeft {
   0% {
      opacity: 0;
      transform: translateX(-20px);
   }
   100% {
      opacity: 1;
      transform: translateX(0);
   }
} 

@keyframes fadeInRight {
   0% {
      opacity: 0;
      transform: translateX(20px);
   }
   100% {
      opacity: 1;
      transform: translateX(0);
   }
} 

@keyframes pulse {

	//

	0% {
		 transform: scale(1);
	}

	40% {
		transform: scale(1.025);
	}
	50% {
		transform: scale(1.035);
	}
	75% {
		transform: scale(1.05);
	}

85% {
		transform: scale(1.025);
	}
	100% {
		 transform: scale(1.0);
	}
}

@-webkit-keyframes kf_shake {
	0% { -webkit-transform: translate(30px); }
	20% { -webkit-transform: translate(-30px); }
	40% { -webkit-transform: translate(15px); }
	60% { -webkit-transform: translate(-15px); }
	80% { -webkit-transform: translate(8px); }
	100% { -webkit-transform: translate(0px); }
}
@-moz-keyframes kf_shake {
	0% { -moz-transform: translate(30px); }
	20% { -moz-transform: translate(-30px); }
	40% { -moz-transform: translate(15px); }
	60% { -moz-transform: translate(-15px); }
	80% { -moz-transform: translate(8px); }
	100% { -moz-transform: translate(0px); }
}
@-o-keyframes kf_shake {
	0% { -o-transform: translate(30px); }
	20% { -o-transform: translate(-30px); }
	40% { -o-transform: translate(15px); }
	60% { -o-transform: translate(-15px); }
	80% { -o-transform: translate(8px); }
	100% { -o-origin-transform: translate(0px); }
}

//====================================================================================================================
.fa-phone.fa-phone-alt {
	transform: scaleX(-1);
}

.form__input, .form__textarea {
	border: 1px solid #f9f9f9;
	background: #f9f9f9;
	transition: border-color .15s ease-in-out,box-shadow .15s ease-in-out;
	border-radius: 0;
}

.form__input {
	height: 55px;
	padding: 5px 20px;
}




.search {
	.search__input {
		height: 50px;
		border-radius: 30px;
		padding-left: 25px;
		border: 1px solid #ced4da;
		transition: all 0.3s ease 0s;
		background-color: #fff;
		border-radius: .25rem;
		&:focus {
			border-color: #80bdff;
		}
	}
	.search__button {
		font-size: 16px;
		top: 50%;
		transform: translate(0px, -50%);
		height: auto;
		min-width: 15px;
		width: auto;
		background: transparent;
		color: #444;
		right: 24px;
		&::before {
			transition: all 0.3s ease 0s;
		}
		&:hover {
			&::before {
				color: $redColor;
			}
		}
	}

}



.filter__link {
	display: flex;
	gap: 5px;
	cursor: pointer;
	position: relative; // important
 
	// Now we'll create the checkbox object
 
	.filter__checkbox {
	  display: inline-block;
	  position: relative;
	  background-color: transparent;
	  width: 20px;
	  height: 20px;
	  flex: 0 0 20px;
	  transform-origin: center;
	  border: 1px solid #444;
	  border-color: var(--okay-basic-company); 
	  border-radius: 50%;
	  vertical-align: -6px;
	  margin-right: 7px;
	  transition: background-color 150ms 200ms, transform 350ms cubic-bezier(.78,-1.22,.17,1.89); // custom ease effect for bouncy animation
 
 // Now we'll create the "tick" using pseudo elements - those will be basically two lines that will be rotated to form the "tick"
 
	&:before {
	  content: "";
	  width: 0px;
	  height: 2px;
	  border-radius: 2px; // so that the tick has nice rounded look
	  background: var(--okay-basic-company);
	  position: absolute;
	  transform: rotate(45deg);
	  top: 9px;
	  left: 6px;
	  transition: width 50ms ease 50ms;
	  transform-origin: 0% 0%;
	}
 
	&:after {
	  content: "";
	  width: 0;
	  height: 2px;
	  border-radius: 2px; // so that the tick has nice rounded look
	  background: var(--okay-basic-company);
	  position: absolute;
	  transform: rotate(305deg);
	  top: 13px;
	  left: 7px;
	  transition: width 50ms ease;
	  transform-origin: 0% 0%;
	}
 }
 // Time to add some life to it
 
 &:hover {
	span {
	  &:before {
		 width: 5px;
		 transition: width 100ms ease;
	  }
	  
	  &:after {
		 width: 10px;
		 transition: width 150ms ease 100ms;
	  }
	}
 }
}

.filter__link {
 
 // Let's add some effects after the checkbox is checked
 
 &.checked {
		.filter__checkbox {
		 background-color: #fff;
		 transform: scale(1.1); // enlarge the box
		 
		 &:after {
			width: 10px;
			background: var(--okay-basic-company);
			transition: width 150ms ease 100ms; // enlarge the tick
		 }
		 
		 &:before {
			width: 5px;
			background: var(--okay-basic-company);
			transition: width 150ms ease 100ms; // enlarge the tick
		 }
	  }
	}
	
	&:hover .filter__checkbox { // copy the states for onMouseOver to avoid flickering
		 background-color: #fff;
		 transform: scale(1.1); // enlarge the box

		 &:after {
			width: 10px;
			background: var(--okay-basic-company);
			transition: width 150ms ease 100ms; // enlarge the tick
		 }

		 &:before {
			width: 5px;
			background: var(--okay-basic-company);
			transition: width 150ms ease 100ms; // enlarge the tick
		 }
	}
}